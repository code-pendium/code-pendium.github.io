{"version":3,"sources":["webpack:///./src/views/levels/c_05.vue?3714","webpack:///src/views/levels/c_05.vue","webpack:///./src/views/levels/c_05.vue?9166","webpack:///./src/views/levels/c_05.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_b","properties","staticRenderFns","title","tags","difficulty","description","inputFormat","outputFormat","hint","defaultCode","defaultInput","testInputs","inputFunction","solution","str","array","i","validator","precheck","invalidMatches","code","match","components","Level","data","mounted","l","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAAQJ,EAAIM,GAAG,GAAG,QAAQN,EAAIO,YAAW,KACxIC,EAAkB,G,iECQtB,SACAC,EAAQ,UACRC,EAAO,CAAC,gBACRC,EAAa,EAEbC,EAAc,qzGA2EdC,EAAc,uPASdC,EAAA,uRASAC,EAAO,gUAOPC,EAAc,wDAKdC,EAAe,wCAGfC,EAAa,CAAC,CAAC,CAAC,IAAK,KAAM,KAAM,SAAU,OAAQ,OAAQ,WAAY,MAAO,OAAQ,OAAQ,MAE9FC,EAAgB,cAEhBC,EAAW,SAAX,GAEE,IADA,IAAIC,EAAM,GACZ,mBACIA,GAAOC,EAAMC,GAAK,IAEpB,OAAOF,GAGTG,EAAY,SAAZ,KACA,2BAGAC,EAAW,SAAX,GACE,IAAIC,EAAiBC,EAAKC,MAAM,YAChC,OAAF,GACA,0CAMA,GACEC,WAAY,CACVC,MAAJ,QAGEC,KAAM,WAAR,OACA,YACA,OACA,QACA,OACA,aAEA,cACA,cACA,eACA,OAEA,cACA,eAEA,aACA,gBACA,WACA,YAEA,cAIEC,QA7BF,WA8BI/B,KAAKM,WAAWW,WAAW,GAAK,CAAC,IAEjC,IADA,IAAIe,EAAI,EAAZ,YACA,YACMhC,KAAKM,WAAWW,WAAW,GAAG,GAAGK,GAAK,EAA5C,kBCpL2Z,I,YCOvZW,EAAY,eACd,EACAnC,EACAS,GACA,EACA,KACA,KACA,MAIa,aAAA0B,E","file":"js/chunk-2d0b1e62.48cc41e7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Level',_vm._b({},'Level',_vm.properties,false))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <Level\r\n  v-bind=\"properties\"\r\n  ></Level>\r\n</template>\r\n\r\n<script>\r\nimport Level from \"@/components/Level\"\r\n\r\nconst name = \"C-05\",\r\ntitle = \"Looping\",\r\ntags = [\"Fundamentals\"],\r\ndifficulty = 2,\r\n\r\ndescription = \r\n`<p>\r\nLooping is the process of executing a block of code a specific number of times. \r\nThis is usually done for redundant tasks, and especially in arrays. \r\nThe type of looping we will tackle in here is the <kbd>for</kbd> loop. Consider the following code below:\r\n</p>\r\n<p>\r\n<kbd>var colors = [\"Red\", \"Green\", \"Blue\", \"Black\", \"White\"] \r\n var text = \"\"\r\n text += colors[0] + \"\\\\n\"\r\n text += colors[1] + \"\\\\n\"\r\n text += colors[2] + \"\\\\n\"\r\n text += colors[3] + \"\\\\n\"\r\n text += colors[4] + \"\\\\n\"</kbd> \r\n</p>\r\nIn this example, we are trying to list down all the elements inside <kbd>colors</kbd> into a single multi-line string. \r\nWe do this by <b>string concatenation</b>. The addition <kbd>+</kbd> operator can work on strings. \r\nThe addition assignment operator <kbd>+=</kbd> adds the value stated to the variable. \r\nIf we have an example, <kbd>x += y</kbd>, it is essentially the same as <kbd>x = x + y</kbd>. \r\nThe escaped n character (\\\\n) corresponds to a new line character. \r\nIf we execute and print out the output of the example code, it should look like this:\r\n</p>\r\n<p>\r\n<kbd>\"Red\r\n Green\r\n Blue\r\n Black\r\n White\"</kbd>\r\n</p>\r\n<p>\r\nNow what if we have not just 5, but 100 elements inside the <kbd>color</kbd> array? \r\nTo save us some space and allow for more flexibility, we will utilize the <kbd>for</kbd> loop.\r\n</p>\r\n<p>\r\n<kbd>var colors = [\"Red\", \"Green\", \"Blue\", \"Black\", \"White\"] \r\n var text = \"\"\r\n for(var i = 0; i < colors.length; i++) {\r\n   text += colors[i] += \"\\\\n\"\r\n }</kbd>\r\n</p>\r\n<p>\r\nThis may seem a little confusing, but we'll break it down. The basic <kbd>for</kbd> loop is comprised of 3 statements:\r\n</p>\r\n<p>\r\n<kbd>for(statement1; statement2; statement3)</kbd>.\r\n</p>\r\n<p>\r\nThe first statement will be executed once.\r\nWe'll call this the <b>initial</b> statement. Usually this is where we'll define an <b>iterator</b> variable. \r\nThe second statement defines the condition of the loop. \r\nSo long as this condition is true, it will execute the code block within the loop. \r\nUsually, this is where we set the <b>condition</b> to limit the iterator. \r\nThe third and last statement is executed every loop cycle. Usually this is where we iterate the iterator variable we've initially set.\r\n</p>\r\n<p>\r\nWith this, we can read the for loop above as follows:\r\n<ul>\r\n<li>Start the loop by defining <kbd>i</kbd> and setting it to <kbd>0</kbd>.</li>\r\n<li>Set the condtion to <kbd>i < colors.length</kbd>. \r\nThis means our loop will execute until the value of <kbd>i</kbd> exceeds the number of elements inside the <kbd>colors</kbd> array.</li>\r\n<li>Set that for every loop cycle, add <kbd>1</kbd> to our iterator <kbd>i</kbd>. \r\nIn here we use the shorthand <kbd>i++</kbd>, which is the same as <kbd>i += 1</kbd>.</li>\r\n</ul>\r\n</p>\r\n<p>\r\nWith this, our <kbd>for</kbd> loop should cycle 5 times, with <kbd>i</kbd> going from <kbd>0</kbd> to <kbd>4</kbd>. \r\nWe can then use <kbd>i</kbd> to substitute for the index number with <kbd>colors[i]</kbd> in <kbd>text += colors[i] += \"\\\\n\"</kbd>, \r\nessentially condensing our code earlier into this single statement.\r\n</p>\r\n<p>\r\nNow that you have an idea as to how looping works, here's the problem for this level: \r\nYou will be making a function that strings all the entries within the given input array into a single string, separated by  a space. \r\n<b>You may not use the <kbd>array.join()</kbd> method.</b>\r\n</p>`,\r\n\r\ninputFormat = \r\n`<p>\r\nThe input function <kbd>firstAndLast()</kbd> only has 1 argument: <kbd>array</kbd>. \r\nThis argument is an array type that can contain any amount of elements.\r\n</p>\r\n<p>\r\nExample Input: <kbd>stringArray([\"Please\", \"help\", \"me\"])</kbd>\r\n</p>`,\r\n\r\noutputFormat =\r\n`<p>\r\nThe output must be a string of the input array combined together, with a space as a separator. \r\nYou may also choose to trim excess spaces at the ends of the output, using the <kbd>string.trim()</kbd> method.\r\n</p>\r\n<p>\r\nExample Output: <kbd>\"Please help me \"</kbd>\r\n</p>`,\r\n\r\nhint = \r\n`<p>\r\nThis problem's solution is quite similar to the example code given in the description, \r\nexcept that you have to use a space <kbd>\" \"</kbd> instead of a new line <kbd>\"\\\\n\"</kbd> character. \r\nYou also have to return the <kbd>text</kbd> variable at the very <b>end of the function</b>, not within the loop.\r\n</p>`,\r\n\r\ndefaultCode = \r\n`function stringArray(array) {\r\n  // Your code here\r\n}`,\r\n\r\ndefaultInput = \r\n`stringArray([\"Please\", \"help\", \"me\"])`,\r\n\r\ntestInputs = [[[\"I\", \"am\", \"so\", \"fucked\", \"with\", \"this\", \"deadline\", \"pls\", \"save\", \"me\"]], null],\r\n\r\ninputFunction = `stringArray`,\r\n\r\nsolution = (array) => {\r\n  var str = \"\"\r\n  for(var i = 0; i < array.length; i++) {\r\n    str += array[i] + \" \"\r\n  }\r\n  return str\r\n},\r\n\r\nvalidator = (a, b) => {\r\n return a.trim() == b.trim()\r\n},\r\n\r\nprecheck = (code) => {\r\n  var invalidMatches = code.match(/(.join)/g)\r\n  if(invalidMatches) \r\n    return \"You cannot use the array.join() method\"\r\n  return true\r\n}\r\n\r\nimport random from \"random\"\r\n\r\nexport default {\r\n  components: {\r\n    Level\r\n  },\r\n\r\n  data: () => ({\r\n    properties: {\r\n      name,\r\n      title,\r\n      tags,\r\n      difficulty,\r\n\r\n      description,\r\n      inputFormat,\r\n      outputFormat,\r\n      hint,\r\n\r\n      defaultCode, \r\n      defaultInput,\r\n\r\n      testInputs,\r\n      inputFunction,\r\n      solution,\r\n      validator,\r\n\r\n      precheck\r\n    }\r\n  }),\r\n\r\n  mounted() {\r\n    this.properties.testInputs[1] = [[]]\r\n    var l = random.int(3, 10)\r\n    for(var i = 0; i < l; i++) {\r\n      this.properties.testInputs[1][0][i] = random.int(-100, 100)\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./c_05.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./c_05.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./c_05.vue?vue&type=template&id=e74f7c04&\"\nimport script from \"./c_05.vue?vue&type=script&lang=js&\"\nexport * from \"./c_05.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}