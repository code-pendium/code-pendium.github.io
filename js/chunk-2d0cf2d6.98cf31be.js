(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0cf2d6"],{6336:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("Level",n._b({},"Level",n.properties,!1))},o=[],d=t("28fe"),s=t("61b2"),l=t.n(s),a="C-02",u="Conditions",r=["Fundamentals"],p=2,b="<p>\nConditions are a core part of every programming language. \nConditional statements are used to perform different actions depending on different conditions. \nIn this problem, we will be using <kbd>if</kbd>, <kbd>else</kbd>, and <kbd>else if</kbd> statements. \n</p>\n<ul>\n<li><kbd>if</kbd> is used to specify a block of code to be executed, if the specified condition is true.</li>\n<li><kbd>else</kbd> is used  to specify a block of code to be executed, if the first condition is false.</li>\n<li><kbd>else if</kbd> is used to specify a new condition to test, if the first condition is false.</li>\n</ul>\n<br>\n<p>\nIn this problem, you will be making a function that returns something based on the given input <kbd>food</kbd>. \nThe conditions to be followed are:\n</p>\n<ul>\n<li>If <kbd>food</kbd> is <kbd>Apple</kbd>, it should return <kbd>Pie!</kbd>.</li> \n<li>If <kbd>food</kbd> is <kbd>Orange</kbd>, it should return <kbd>Juice!</kbd>.</li>\n<li>If it is neither of those, it should simply return <kbd>false</kbd> (as a boolean, not a string).</li>\n</ul>",f='<p>\nThe input function <kbd>match()</kbd> takes only 1 arguments: <kbd>food</kbd>. This argument is a string.\n</p>\n<p>\nExample Input: <kbd>match("Apple")</kbd>\n</p>',c="<p>\nThe output is also a string, except when all the conditions fail. In that casem return <kbd>false</kbd>.\n</p>\n<p>\nExample Output: <kbd>Pie!</kbd>\n</p>",k='<p>\nEvery condition must contain a corresponding <kbd>return</kbd> statement (instructed in description). \nDo also note that strings have to be encased in quotes <kbd>\'</kbd> or double quotes <kbd>"</kbd>. \n</p>\n<p>\nExample: <kbd>return "Foo"</kbd>\n</p>',h='function match(food) {\n  // The conditions have already been given to you\n  // Just fill in the required return statements\n  if(food == "Apple") {\n    \n  } else if(food == "Orange") {\n\n  } else {\n\n  }\n}',m='match("Apple")',g=[["Apple"],["Orange"],null],w="match",v=function(n){return"Apple"==n?"Pie!":"Orange"==n&&"Juice!"},y={components:{Level:d["a"]},data:function(){return{properties:{name:a,title:u,tags:r,difficulty:p,description:b,inputFormat:f,outputFormat:c,hint:k,defaultCode:h,defaultInput:m,testInputs:g,inputFunction:w,solution:v}}},mounted:function(){this.properties.testInputs[2]=[l.a.int(-100,100)]}},I=y,x=t("2877"),A=Object(x["a"])(I,i,o,!1,null,null,null);e["default"]=A.exports}}]);
//# sourceMappingURL=chunk-2d0cf2d6.98cf31be.js.map