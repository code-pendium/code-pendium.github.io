{"version":3,"sources":["webpack:///./src/views/levels/c_06.vue?3145","webpack:///src/views/levels/c_06.vue","webpack:///./src/views/levels/c_06.vue?1517","webpack:///./src/views/levels/c_06.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_b","properties","staticRenderFns","title","tags","difficulty","description","inputFormat","outputFormat","hint","defaultCode","defaultInput","testInputs","inputFunction","solution","n","steps","i","type","initial","rnd","components","Level","data","mounted","operations","op","rndSteps","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAAQJ,EAAIM,GAAG,GAAG,QAAQN,EAAIO,YAAW,KACxIC,EAAkB,G,iCCQtB,SACAC,EAAQ,kBACRC,EAAO,CAAC,QAAS,aAAc,cAC/BC,EAAa,EAEbC,EAAc,ucAQdC,EAAc,qlBAWdC,EAAA,qOASAC,EAAA,qkCA4BAC,EAAc,+DAKdC,EAAe,2DAGfC,EAAa,CAAC,KAAM,KAAM,MAE1BC,EAAgB,YAEhBC,EAAW,SAAX,KACE,IAAF,YACI,IAAIC,EAAIC,EAAMC,GAAG,GACbC,EAAOF,EAAMC,GAAG,GACxB,WACA,MACA,gBACA,MACA,gBACA,MACA,cACA,MAEE,OAAOE,GAKT,SAASC,IACP,OAAO,EAAT,gBAGA,OACEC,WAAY,CACVC,MAAJ,QAGEC,KAAM,WAAR,OACA,YACA,OACA,QACA,OACA,aAEA,cACA,cACA,eACA,OAEA,cACA,eAEA,aACA,gBACA,cAIEC,QA1BF,WA2BI,IAAIC,EAAa,CAAC,MAAO,WAAY,WAAY,UAIjD,IAAJ,SADI9B,KAAKM,WAAWW,WAAW,GAAK,CAACQ,IAAO,IAC5C,EACA,CACM,IAAN,OACA,MACMzB,KAAKM,WAAWW,WAAW,GAAG,GAAGK,GAAK,CAACF,EAAGW,GAI5C/B,KAAKM,WAAWW,WAAW,GAAK,CAACQ,IAAO,IAGxCzB,KAAKM,WAAWW,WAAW,GAAK,CAACQ,IAAO,IAExC,IADA,IAAIO,EAAW,EAAnB,YACA,aACM,IAAN,eACA,OACA,MACMhC,KAAKM,WAAWW,WAAW,GAAG,GAAG,GAAvC,SCxJ2Z,I,YCOvZgB,EAAY,eACd,EACAnC,EACAS,GACA,EACA,KACA,KACA,MAIa,aAAA0B,E","file":"js/chunk-2d2382c6.2de95c82.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Level',_vm._b({},'Level',_vm.properties,false))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <Level\r\n  v-bind=\"properties\"\r\n  ></Level>\r\n</template>\r\n\r\n<script>\r\nimport Level from \"@/components/Level\"\r\n\r\nconst name = \"C-06\",\r\ntitle = \"Step Calculator\",\r\ntags = [\"Basic\", \"Arithmetic\", \"Calculator\"],\r\ndifficulty = 3,\r\n\r\ndescription = \r\n`<p>\r\nIn a previous problem, you've created a simple 4-operation calculator. \r\nNow that you've learned a little bit about arrays and looping, it's time to one it up and make a slightly more advanced version. \r\nIn this problem, you will be making a step calculator. Each input will consist of multiple \"steps\" that the calculator should execute. \r\nYour program must output the result of executing all these steps in the order that they are given.\r\n</p>`,\r\n\r\ninputFormat = \r\n`<p>\r\nThe input function <kbd>calculate()</kbd> takes 2 arguments: <b>initial</b> and <b>steps</b>. \r\nThe first argument would be the initial value of the calculation. This value gets mutated as each step passes through the function. \r\nThe <b>steps</b> argument is an array. This array will contain instructions for each step. A step is an array with two elements. \r\nThe first element is a number. The second element is an operation (<b>add</b>, <b>subtract</b>, <b>multiply</b>, <b>divide</b>).\r\n</p>\r\n<p>\r\nExample Input: <kbd>calculate(1, [[2, \"add\"], [3, \"add\"], [4, \"subtract\"]])</kbd>\r\n</p>`,\r\n\r\noutputFormat =\r\n`<p>\r\nThe ouput of the function is the final value after every step has been executed. The output must be a number. \r\nIf the input has no steps specified, return the initial value.\r\n<p>\r\nExample Output: <kbd>2</kbd>\r\n</p>\r\n</p>`,\r\n\r\nhint =\r\n`<p>\r\nThis problem is all about modifying the <kbd>initial</kbd> variable with every \"step\" within the <kbd>steps</kbd> array, \r\nand then finally returning it after all steps have been done. \r\nAlso note that every \"step\" is in an array format. You will notice that the <kbd>steps</kbd> array, contains arrays (the \"steps\"). \r\nTo access the value of an individual step, you may re-use the same format, like so:\r\n</p>\r\n<p>\r\n<kbd>for(var i = 0; i < steps.length; i++) { \r\n   var number = steps[i][0]\r\n   var type = steps[i][1]\r\n }</kbd>\r\n</p>\r\n<p>\r\nIn here, we are trying to get the <kbd>number</kbd> value, which is the first <kbd>[0]</kbd> element on a \"step\" object. \r\nWe do this by first getting the specific step with <kbd>step[i]</kbd>, and then adding in the <kbd>[0]</kbd>. \r\nThe same can be done for the <kbd>type</kbd> variable, and since it is the second element, we use <kbd>[1]</kbd>.\r\n</p>\r\n<p>\r\nAlternatively, we can also do:\r\n</p>\r\n<kbd>var step = steps[i]\r\n var number = step[0] \r\n var type = step[1] </kbd>\r\n</p>\r\n<p>A bit longer, but this format has better readability.\r\n</p>`,\r\n\r\ndefaultCode = \r\n`function calculate(initial, steps) {\r\n  // Your code here\r\n}`,\r\n\r\ndefaultInput = \r\n`calculate(1, [[2, \"add\"], [3, \"add\"], [4, \"subtract\"]]);`,\r\n\r\ntestInputs = [null, null, null],\r\n\r\ninputFunction = `calculate`,\r\n\r\nsolution = (initial, steps) => {\r\n  for(var i in steps) {\r\n    var n = steps[i][0]\r\n    var type = steps[i][1]\r\n    if(type == \"add\") \r\n      initial += n\r\n    if(type == \"subtract\") \r\n      initial -= n\r\n    if(type == \"multiply\") \r\n      initial *= n\r\n    if(type == \"divide\") \r\n      initial /= n\r\n  }\r\n  return initial\r\n}\r\n\r\nimport random from \"random\"\r\n\r\nfunction rnd() {\r\n  return random.int(-100, 100)\r\n}\r\n\r\nexport default {\r\n  components: {\r\n    Level\r\n  },\r\n\r\n  data: () => ({\r\n    properties: {\r\n      name,\r\n      title,\r\n      tags,\r\n      difficulty,\r\n\r\n      description,\r\n      inputFormat,\r\n      outputFormat,\r\n      hint,\r\n\r\n      defaultCode, \r\n      defaultInput,\r\n\r\n      testInputs,\r\n      inputFunction,\r\n      solution\r\n    }\r\n  }),\r\n\r\n  mounted () {\r\n    var operations = [\"add\", \"subtract\", \"multiply\", \"divide\"]\r\n\r\n    // First Test\r\n    this.properties.testInputs[0] = [rnd(), []]\r\n    for(let i in operations)\r\n    {\r\n      let op = operations[i]\r\n      let n = rnd()\r\n      this.properties.testInputs[0][1][i] = [n, op]\r\n    }\r\n    \r\n    // Second Test\r\n    this.properties.testInputs[1] = [rnd(), []]\r\n\r\n    // Third Test\r\n    this.properties.testInputs[2] = [rnd(), []]\r\n    var rndSteps = random.int(2, 10)\r\n    for(let i = 0; i < rndSteps; i++) {\r\n      let rndOp = random.int(0, 3)\r\n      let op = operations[rndOp]\r\n      let n = rnd()\r\n      this.properties.testInputs[2][1][i] = [n, op]\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./c_06.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./c_06.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./c_06.vue?vue&type=template&id=eb3b5858&\"\nimport script from \"./c_06.vue?vue&type=script&lang=js&\"\nexport * from \"./c_06.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}