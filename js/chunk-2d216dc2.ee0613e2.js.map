{"version":3,"sources":["webpack:///./src/views/levels/c_04.vue?8828","webpack:///src/views/levels/c_04.vue","webpack:///./src/views/levels/c_04.vue?6188","webpack:///./src/views/levels/c_04.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_b","properties","staticRenderFns","title","tags","difficulty","description","inputFormat","outputFormat","hint","defaultCode","defaultInput","testInputs","inputFunction","solution","array","length","validator","components","Level","data","mounted","l","i","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAAQJ,EAAIM,GAAG,GAAG,QAAQN,EAAIO,YAAW,KACxIC,EAAkB,G,iCCQtB,SACAC,EAAQ,SACRC,EAAO,CAAC,gBACRC,EAAa,EAEbC,EAAc,29DAyCdC,EAAc,4OASdC,EAAA,6LAQAC,EAAO,kRAOPC,EAAc,yDAKdC,EAAe,6BAGfC,EAAa,CAAC,KAAM,MAEpBC,EAAgB,eAEhBC,EAAW,SAAX,GACE,MAAO,CAACC,EAAM,GAAIA,EAAMA,EAAMC,OAAS,KAGzCC,EAAY,SAAZ,KACA,+BAKA,GACEC,WAAY,CACVC,MAAJ,QAGEC,KAAM,WAAR,OACA,YACA,OACA,QACA,OACA,aAEA,cACA,cACA,eACA,OAEA,cACA,eAEA,aACA,gBACA,WACA,eAIEC,QA3BF,WA4BI1B,KAAKM,WAAWW,WAAW,GAAK,CAAC,CAAC,EAAtC,kBACIjB,KAAKM,WAAWW,WAAW,GAAK,CAAC,IAEjC,IADA,IAAIU,EAAI,EAAZ,YACA,YACM3B,KAAKM,WAAWW,WAAW,GAAG,GAAGW,GAAK,EAA5C,kBCrI2Z,I,YCOvZC,EAAY,eACd,EACA/B,EACAS,GACA,EACA,KACA,KACA,MAIa,aAAAsB,E","file":"js/chunk-2d216dc2.ee0613e2.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Level',_vm._b({},'Level',_vm.properties,false))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <Level\r\n  v-bind=\"properties\"\r\n  ></Level>\r\n</template>\r\n\r\n<script>\r\nimport Level from \"@/components/Level\"\r\n\r\nconst name = \"C-04\",\r\ntitle = \"Arrays\",\r\ntags = [\"Fundamentals\"],\r\ndifficulty = 2,\r\n\r\ndescription = \r\n`<p>\r\nArray is a data type that can store multiple values in a single variable. Think of it like a list. An example of an array would be:\r\n</p>\r\n<p>\r\n<kbd>var fruits = [\"Apple\", \"Orange\", \"Grape\"]</kbd>\r\n</p>\r\n<p>\r\nTo access an element (value) from an array, we have to call it by it's <b>index number</b>. \r\nThis is the position of the element in the array. The index number of an array <b>always starts with 0</b>. \r\nUsing the same array example above, we can get the value <kbd>Grape</kbd> by doing the following: \r\n</p>\r\n<p>\r\n<kbd>var x = fruits[2]</kbd>\r\n</p>\r\n<p>\r\nThe variable <kbd>x</kbd> in here would equate to <kbd>Grape</kbd>, \r\nsince we are calling the element in the array with the index number of <b>2</b>, \r\nwhich corresponds to <b>the third element of the array</b> (because arrays count from zero, as stated above). \r\nCalling elements from an array can also be done not just with numbers, we can also use variables. \r\n</p>\r\n<p>\r\n<kbd>var fibonacci = [1, 1, 2, 3, 5] \r\n var i = fibonacci.length - 1\r\n var last = fibonacci[i]</kbd>\r\n</p>\r\n<p>\r\nThe variable <kbd>last</kbd> here equates to <kbd>5</kbd>, which is the last element in the array <kbd>fibonacci</kbd>. \r\nYou might notice something new here, and it is the <kbd>length</kbd> property. \r\nEvery array (and even strings) have this property. It tells us the total number of elements \r\n(or characters, if it's a string) within the array. \r\nIf we want to get the index number of the last element of the array, we can use the said array's length value, and deduct 1 from it. \r\nWe do this since arrays count from zero. \r\nIn the example above, we set the variable <kbd>i</kbd> as an index number for the last element of the array. \r\nWe can then use <kbd>i</kbd> to extract the last element of the <kbd>fibonacci</kbd> array, \r\nwhich is the value we assigned to the variable <kbd>last</kbd>.\r\n</p>\r\n<p>\r\nYour task now is to create a function that gets the first and last element of a given array. Return both these values as an array.\r\n</p>`,\r\n\r\ninputFormat = \r\n`<p>\r\nThe input function <kbd>firstAndLast()</kbd> only has 1 argument: <kbd>array</kbd>. \r\nThis argument is an array type that can contain any amount of elements.\r\n</p>\r\n<p>\r\nExample Input: <kbd>firstAndLast([1, 2, 3, 4])</kbd>\r\n</p>`,\r\n\r\noutputFormat =\r\n`<p>\r\nThe output of the function must be an array, with two elements being the first and last elements of the input array, respectively.\r\n</p>\r\n<p>\r\nExample Output: <kbd>[1,4]</kbd>\r\n</p>`,\r\n\r\nhint = \r\n`<p>\r\nIf you are having difficulty with returning the proper output, remember that it <b>has to be an array</b>, \r\ncontaining the first and last element of the input array. \r\nIf you've set up those two as variables, you can simply do <kbd>return [first, last]</kbd>.\r\n</p>`,\r\n\r\ndefaultCode = \r\n`function firstAndLast(array) {\r\n  // Your code here\r\n}`,\r\n\r\ndefaultInput = \r\n`firstAndLast([1, 2, 3, 4])`,\r\n\r\ntestInputs = [null, null],\r\n\r\ninputFunction = `firstAndLast`,\r\n\r\nsolution = (array) => {\r\n  return [array[0], array[array.length - 1]]\r\n},\r\n\r\nvalidator = (a, b) => {\r\n return (a[0] == b[0] && a[1] == b[1])\r\n}\r\n\r\nimport random from \"random\"\r\n\r\nexport default {\r\n  components: {\r\n    Level\r\n  },\r\n\r\n  data: () => ({\r\n    properties: {\r\n      name,\r\n      title,\r\n      tags,\r\n      difficulty,\r\n\r\n      description,\r\n      inputFormat,\r\n      outputFormat,\r\n      hint,\r\n\r\n      defaultCode, \r\n      defaultInput,\r\n\r\n      testInputs,\r\n      inputFunction,\r\n      solution,\r\n      validator\r\n    }\r\n  }),\r\n\r\n  mounted() {\r\n    this.properties.testInputs[0] = [[random.int(-100, 100)]]\r\n    this.properties.testInputs[1] = [[]]\r\n    var l = random.int(3, 10)\r\n    for(var i = 0; i < l; i++) {\r\n      this.properties.testInputs[1][0][i] = random.int(-100, 100)\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./c_04.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./c_04.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./c_04.vue?vue&type=template&id=1dd88338&\"\nimport script from \"./c_04.vue?vue&type=script&lang=js&\"\nexport * from \"./c_04.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}